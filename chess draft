# define  the initial chessboard as a 2D list
chessboard = [
    ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],
    ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
    ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],
]

# function to print the chessboard
def print_chessboard(board):
    for row in board:
        print(' '.join(row))
    print()

# function to validate a move
def is_valid_move(piece, start_row, start_col, end_row, end_col):
    # add piece-specific move validation logic here!!!
    return True  # For now, just allow any move

# main game loop LET'S GOOOO
while True:
    print_chessboard(chessboard)
    
    # get move input from the player
    start = input("Enter the start position (e.g., 'a2'): ")
    end = input("Enter the end position: ")
    
    # convert input to row and column indices
    start_col = ord(start[0]) - ord('a')
    start_row = int(start[1]) - 1
    end_col = ord(end[0]) - ord('a')
    end_row = int(end[1]) - 1
    
    # get the piece being moved
    piece = chessboard[start_row][start_col]
    
    # check if the move is valid
    if is_valid_move(piece, start_row, start_col, end_row, end_col):
        chessboard[end_row][end_col] = piece
        chessboard[start_row][start_col] = ' '
    else:
        print("you can't move there! try again.")